<%- include('../../top.ejs') -%>
<%- include('../../header.ejs') -%>
<%- include('../../sidenav.ejs') -%>

<style>
  .addChip {
    letter-spacing: 0px;
    padding: 0 12px;
    font-size: 13px;
    border-radius: 16px;
    box-shadow: none;
    line-height: 32px;
    display: inline-block;
    height: 32px;
    margin-right: 5px;
    margin-bottom: 5px;
    margin-top: 3px;
    background-color: #2196f3 !important;
  }

  .circle {
    width: 120px;
    height: 120px;
    line-height: 120px;
    border-radius: 50%;
    /* border: 2px solid #2196f3; */
    font-size: 35px;
    color: #2196f3;
    text-align: center;
    background: rgb(245, 245, 245);
    font-weight: bold;
  }
</style>


<div id="main">

  <div class="row">
    <div class="content-wrapper-before gradient-45deg-indigo-light-blue "></div>
    <div class="breadcrumbs-dark pb-0 pt-4" id="breadcrumbs-wrapper">
      <!-- Search for small screen-->
      <div class="container">
        <div class="row">
          <div class="col s10 m6 l6">
            <h5 class="breadcrumbs-title mt-0 mb-0"><span>User Details</span></h5>
            <ol class="breadcrumbs mb-0">
              <!-- <li class="breadcrumb-item"><a href="/dashboard">Home</a>
              </li> -->
              <li class="breadcrumb-item"><a href="/user">Users</a>
              </li>
              <li class="breadcrumb-item active">View User
              </li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col s12">
      <div class="container">
        <div class="card roundCorners">
          <div class="card-content">
            <p class="caption">
              Add User
              User Manager Add User
              CLXNS User Manager allows you to create various user types having specific read/edit/write access or an
              access to specific module.
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row mb-10">
    <div class="col s12">
      <div class="container">
        <div class="card roundCorners">
          <div class="card-content pb-4">


            <div class="row m-0">
              <div class="col s10 m10 l10 p-0">
                <h5><b><%= user.firstName %> <%= user.lastName %></b> (<%= role.name %>)</h5>
                <div class="row m-0">
                  <div class="col s6 m3 l3 p-0">
                    <div class="col s2 m2 l2 p-0">
                      <i class="material-icons iconStyle">mail</i>
                    </div>
                    <div class="col s10 m10 l10 p-0">
                      <p><%= user.email %></p>
                    </div>
                  </div>
                  <div class="col s6 m3 l3 p-0">
                    <div class="col s2 m2 l2 p-0">
                      <i class="material-icons iconStyle">call</i>
                    </div>
                    <div class="col s10 m10 l10 p-0">
                      <p>+91<%= user.phone %></p>
                    </div>
                  </div>
                  <div class="col s6 m3 l3 p-0">
                    <div class="col s2 m2 l2 p-0">
                      <i class="material-icons iconStyle">place</i>
                    </div>
                    <div class="col s10 m10 l10 p-0">
                      <p><%= user.location %></p>
                    </div>
                  </div>
                  <div class="col s6 m3 l3 p-0">
                    <div class="col s2 m2 l2 p-0">
                      <i class="material-icons iconStyle">date_range</i>
                    </div>
                    <div class="col s10 m10 l10 p-0">
                      <p><%= user.createdAt.toString().slice(4, 15) %></p>
                    </div>
                  </div>
                </div>
              </div>

              <div class="col s2 m2 l2 p-0 display-flex justify-content-end align-items-center">
                <a class="btn blue" href="/user/edit/<%= user.id %>" style="border-radius: 8px; padding: 0 14px;"><i
                    class="material-icons left">create</i>Edit</a>
              </div>

            </div>

            <div class="divider mt-3 mb-4"></div>

            <!-- CAMPAIGNS -->
            <div class="row m-0">
              <h4 class="card-title"><b>Permissions Assigned</b></h4>
              <div class="row m-0">

                <% permissionModules.forEach((parent) => { %>

                <span class="chip customChip">
                  <b>
                    <%= parent.module.charAt(0).toUpperCase() + parent.module.slice(1)  %>: 
                  </b>

                  <% parent.actions.forEach((action, id, array) => { %>
                   
                      <% if(action.isCheck && id != array.length - 1) { %>
                        <%= action.name.charAt(0).toUpperCase() + action.name.slice(1) %>,
                      <% } else if(action.isCheck && id == array.length - 1) { %>
                        <%= action.name.charAt(0).toUpperCase() + action.name.slice(1) %>
                      <% } %>
                       
                  <% }); %>
                </span>
                
                <% }); %>

              </div>
            </div>



            <!-- CAMPAIGNS -->
            <div class="row m-0 mt-4">
              <h4 class="card-title"><b>Campaigns Assigned</b></h4>
              <div class="row m-0">

                <% campaigns.length > 0 && campaigns.forEach((campaign) => { %>
                <div class="chip customChip">
                  <%= campaign.name %>
                </div>
                <% }); %>


                <!-- <a class="btn-small modal-trigger addChip" href="#campaignModal">
                  <i class="material-icons left" style="margin-right: 5px;">add_circle</i>
                  Add Another Campaign
                </a> -->
              </div>
            </div>

            <!-- CAMPAIGNS MODAL -->
            <div id="campaignModal" class="modal modal-fixed-footer customModal roundCornersFloat" style="height: 50%;">
              <div class="modal-content customModalContent">

                <h5 class="mt-0"><b><%= user.firstName %> <%= user.lastName %></b></h5>

                <h4 class="card-title mt-4">Campaigns Assigned</h4>

                <% campaigns.length > 0 && campaigns.forEach((campaign) => { %>
                <div class="chip mt-1 customChip">
                  <%= campaign.name %>
                  <i class="close material-icons" onclick="removeFromCampaign(`<%= campaign.name %>`)">cancel</i>
                </div>
                <% }); %>

                <div class="chips chips-autocomplete"></div>

              </div>
              <div class="modal-footer customModalFooter">
                <a class="modal-action modal-close btn-flat">Cancel</a>
                <a onclick="addToAnotherCampaign()" class="modal-action modal-close btn-flat mr-1">Add</a>
              </div>
            </div>

            <!-- CALL RECORDS -->
            <div class="row m-0 mt-4">
              <h4 class="card-title"><b>Call Record</b></h4>
              <div class="row m-0">
                <div class="col s6 m3 p-0">
                  <h5 class="m-0">Rs. 65,00,452</h5>
                  <p class="mt-2 mb-10">Total collected amount</p>
                </div>
                <div class="col s6 m2 p-0">
                  <h5 class="m-0">226</h5>
                  <p class="mt-2 mb-10">Messages sent</p>
                </div>
                <div class="col s6 m2 p-0">
                  <h5 class="m-0">2526</h5>
                  <p class="mt-2 mb-10">Total call minutes</p>
                </div>
                <div class="col s6 m2 p-0">
                  <h5 class="m-0">253</h5>
                  <p class="mt-2 mb-10">Total calls made</p>
                </div>
                <div class="col s6 m2 p-0">
                  <h5 class="m-0">15</h5>
                  <p class="mt-2 mb-10">Minutes per call</p>
                </div>
              </div>
            </div>

            <!-- STATISTICS -->
            <div class="row m-0 mt-2">
              <h4 class="card-title"><b>Statistics</b></h4>
              <div class="row" style="text-align: -webkit-center;">
                <div class="col s6 m4 l2">
                  <div class="circle">
                    <p>42%</p>
                  </div>
                  <p class="mt-3"><b>PTP Count</b></p>
                  <p class="mt-1">Total: 253</p>
                </div>
                <div class="col s6 m4 l2">
                  <div class="circle">
                    <p>58%</p>
                  </div>
                  <p class="mt-3"><b>Paid Count</b></p>
                  <p class="mt-1">Total: 743</p>
                </div>
                <div class="col s6 m4 l2">
                  <div class="circle">
                    <p>23%</p>
                  </div>
                  <p class="mt-3"><b>Paid to PTP</b></p>
                  <p class="mt-1">Total: 345</p>
                </div>
                <div class="col s6 m4 l2">
                  <div class="circle">
                    <p>86%</p>
                  </div>
                  <p class="mt-3"><b>Fail Count</b></p>
                  <p class="mt-1">Total: 765</p>
                </div>
                <div class="col s6 m4 l2">
                  <div class="circle">
                    <p>62%</p>
                  </div>
                  <p class="mt-3"><b>Acted Leads</b></p>
                  <p class="mt-1">Total: 231</p>
                </div>
                <div class="col s6 m4 l2">
                  <div class="circle">
                    <p>39%</p>
                  </div>
                  <p class="mt-3"><b>Assignment</b></p>
                  <p class="mt-1">Total: 876</p>
                </div>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  </div>

</div>


<script>
  let currentlyAssignedTo = '';
  let leadLoanAccountNo = '';

  const allCampaigns = '<%- JSON.stringify(allCampaigns) %>';
  const user = '<%- JSON.stringify(user) %>';


  const parseCampaigns = JSON.parse(allCampaigns);
  const parseUser = JSON.parse(user);


  console.log('parseCampaigns', parseCampaigns);
  console.log('parseUser', parseUser);

  const campaignData = {};

  parseCampaigns.map(campaign => {
    campaignData[campaign.name] = null
  })

  $(function () {

    // $('.chip').chips({
    //     onChipAdd: (event, chip) => {
    //     },
    //     onChipSelect: () => {
    //     },
    //     onChipDelete: () => {
    //       console.log('test');
    //     }
    // });

    $('.chips-autocomplete').chips({
      autocompleteOptions: {
        data: campaignData,
        limit: Infinity,
        minLength: 1
      }
    });

  });

  function addToAnotherCampaign() {

    let chipsData = M.Chips.getInstance($('.chips ')).chipsData;
    console.log("Chip Added", chipsData);

    let url = window.location.href;

    const data = {
      // campaignId: parseUser
      userId: parseUser.id,
      chipsData: chipsData
    };

    fetch(`${baseUrl}campaign/addToAnotherCampaign`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(data)
    }).then(response => response.json()).then(data => {
      console.log("Success:", data);
      location.reload();
    }).catch(error => {
      console.error("Error:", error);
    });

  }

  function removeFromCampaign(campaignName) {

    console.log("removeFromCampaign", campaignName);

    const data = {
      userId: parseUser.id,
      campaignName: campaignName
    };

    fetch(`${baseUrl}campaign/removeFromCampaign`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(data)
    }).then(response => response.json()).then(data => {
      console.log("Success:", data);
      location.reload();
    }).catch(error => {
      console.error("Error:", error);
    });

  }

  const toast = '<%- JSON.stringify(toast) %>';
  const toastText = '<%- JSON.stringify(toastText) %>';
  const toastColor = '<%- JSON.stringify(toastColor) %>';
  const parseToast = JSON.parse(toast);
  const parseToastText = JSON.parse(toastText);
  const parseToastColor = JSON.parse(toastColor);

  $(document).ready(function () {
    if (parseToast) {
      M.toast({
        html: parseToastText,
        classes: parseToastColor
      })
    }
  });
</script>

<%- include('../../bottom.ejs') -%>