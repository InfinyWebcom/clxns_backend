<%- include('../../top.ejs') -%>
<%- include('../../header.ejs') -%>
<%- include('../../sidenav.ejs') -%>

<style>
[type='checkbox'] + span:not(.lever):before, [type='checkbox']:not(.filled-in) + span:not(.lever):after {
  left: 13px;
}

[type='checkbox'] + span:not(.lever) {
  margin-left: 9px;
}

.input-field > label {
  top: -16px;
}

  input::-webkit-outer-spin-button,
  input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  input[type=number] {
    -moz-appearance: textfield;
  }
</style>

<script>
  let isStateSelect=false;
  let selected = 1;
  
  // $(document).on('click','button.btn',function(){
  //   if(selected == 1) {
  //     selected = 2;
  //     $('.tabs').tabs('select','Roles');
  //   } 
  //   else if(selected == 2) {
  //     selected = 1;
  //     $('.tabs').tabs('select','Experience');
  //     document.getElementById('next').style.display = 'none';
  //   } 
  // });

  // $(document).on('click','.tab',function(){
  //   document.getElementById('next').style.display = 'block';
  // });

</script>
<div id="main">

  <div class="row">
    <div class="content-wrapper-before gradient-45deg-indigo-light-blue "></div>
    <div class="breadcrumbs-dark pb-0 pt-4" id="breadcrumbs-wrapper">
      <div class="container">
        <div class="row">
          <div class="col s10 m6 l6">
            <h5 class="breadcrumbs-title mt-0 mb-0"><span>Add User</span></h5>
            <ol class="breadcrumbs mb-0">
              <!-- <li class="breadcrumb-item"><a href="/dashboard">Home</a>
                            </li> -->
              <li class="breadcrumb-item"><a href="/user">User Manager</a>
              </li>
              <li class="breadcrumb-item active">Add User
              </li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col s12">
      <div class="container">
        <div class="section section-data-tables">
          <div class="card roundCorners">
            <div class="card-content">
              <p class="caption mb-0">
                CLXNS User Manager allows you to create various user types having specific
                read/edit/write access or an access to specific module.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

<form class="validateAddUser" autocomplete="off" id="validateAddUser" method="POST" action="/user/addUser">
  <div class="row">
    <div class="col s12">
      <div class="row">
        <div class="container">

          <div class="col s12">
            <div id="button-trigger" class="card roundCorners card-default scrollspy">
              <div class="card-content" style="padding: 0px; margin-bottom: -30px;" id="ui-tabs">
                <ul class="tabs" style="border-radius: 10px 10px 0px 0px;">
                  <li class="tab col m4"><a class="active" href="#Roles" id='test2' class="roleTab">Role & Location</a></li>
                   <li class="tab col m4"><a  href="#Basic" id='test1'>Basic</a></li>
                  <li class="tab col m4"><a href="#Experience" id='test3'>Experience</a></li>
                </ul>
              </div>
            </div>
          </div>

          <div id="Basic" class="col s12">
            <div id="button-trigger" class="card card-default scrollspy" style="border-radius: 0px 0px 10px 10px;">
              <div class="card-content">
                <div class="row">
                  <div id="general">
                      <div class="row">
                          <div class="col s4">
                              <div class="input-field">
                                  <label for="firstName">First name</label>
                                  <input type="text" id="firstName" name="firstName" required
                                      value="<%= (form && form.firstName) ? form.firstName : '' %>"
                                      data-error=".errorTxt1">
                                  <small class="errorTxt1"></small>
                              </div>
                          </div>
                          <div class="col s4">
                              <div class="input-field">
                                  <label for="lastName">Last name</label>
                                  <input type="text" id="lastName" name="lastName" required
                                      value="<%= (form && form.lastName) ? form.lastName : '' %>"
                                      data-error=".errorTxt2">
                                  <small class="errorTxt2"></small>
                              </div>
                          </div>
                          <div class="col s4">
                            <div class="input-field">
                              <label for="dob">DOB</label>
                              <input class="" type="date" id="dob" name="dob" required
                                  placeholder="" value="<%= (form && form.dob) ? form.dob : '' %>"
                                  data-error=".errorTxt3" required min="1900-01-02" min="2021-01-01">
                              <small class="errorTxt3"></small>
                          </div>
                        </div>
                      </div>
        
                      <div class="row">
                          <div class="col s4">
                              <div class="input-field">
                                  <label for="email">E-mail</label>
                                  <input id="email" type="text" name="email" required
                                      value="<%= (form && form.email) ? form.email : '' %>"
                                      data-error=".errorTxt4" onblur=""
                                      onkeyup="validateFields(event)">
                                  <small class="errorTxt4"></small>
                                  <small class="">
                                      <div id="emailError"
                                          style="font-size: .8rem; position: relative; color: #ff4081;">
                                      </div>
                                  </small>
                              </div>
                          </div>
                          <div class="col s4">
                              <div class="input-field">
                                  <label for="phone">Phone</label>
                                  <input type="text" id="phone" name="phone" required
                                      value="<%= (form && form.phone) ? form.phone : '' %>"
                                      data-error=".errorTxt5" onkeyup="validateFields(event)">
                                  <small class="errorTxt5"></small>
                                  <small class="">
                                      <div id="phoneError"
                                          style="font-size: .8rem; position: relative; color: #ff4081;">
                                      </div>
                                  </small>
                              </div>
                          </div>
                          <div class="col s4">
                            <div class="input-field">
                              <label for="emergencyPhone">Emergency Phone</label>
                              <input type="text" id="emergencyPhone" name="emergencyPhone" required
                                  value="<%= (form && form.emergencyPhone) ? form.emergencyPhone : '' %>"
                                  data-error=".emergencyPhoneError" onkeyup="validateFields(event)">
                              <small class="emergencyPhoneError"></small>
                              <small class="">
                                  <div id="emergencyPhoneError"
                                      style="font-size: .8rem; position: relative; color: #ff4081;">
                                  </div>
                              </small>
                          </div>
                        </div>
                      </div>
                      <div class="row">
                        <div id="profileImg"></div>
                      </div>
                      <div class="row">
                        <div id="profileImgNew"></div>
                      </div>
                      <div class="row" id="profileImgHide">
                        <div class="col s4">
                            <label for="location">Location</label>
                            <div class="input-field mt-0">
                                <select class="error" id="location" name="location" required
                                    
                                    data-error=".errorTxt8">
                                    <option value="" disabled selected>Choose your option
                                    </option>
                                    <% locations.forEach((location) => { %>
                                      <option  <%= (form && form.location) ? (form.location == location.name) ? 'selected':'' : '' %> value="<%= location.name %>"><%= location.name %></option>
                                      <% }); %>
                                </select>
                                <small class="errorTxt8"></small>
                                <small class="">
                                    <div id="locationError"
                                        style="font-size: .8rem; position: relative; color: #ff4081;">
                                    </div>
                                </small>
                            </div>
                        </div>
                        <div class="col s4">
                          <label for="bloodGroup">Blood Group</label>
                          <div class="input-field mt-0">
                              <select class="error" id="bloodGroup" name="bloodGroup" required
                                  
                                  data-error=".errorTxt9">
                                  <option value="" disabled selected>Choose your option
                                  </option>
                                  <option
                                   <%= (form && form.bloodGroup) ? (form.bloodGroup == 'O+') ? 'selected':'': ''; %> value="O+">O+</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'O-') ? 'selected':'': ''; %> value="O-">O-</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'A+') ? 'selected':'': ''; %> value="A+">A+</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'A-') ? 'selected':'': ''; %> value="A-">A-</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'B+') ? 'selected':'': ''; %> value="B+">B+</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'B-') ? 'selected':'': ''; %> value="B-">B-</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'AB+') ? 'selected':'': ''; %>  value="AB+">AB+</option>
                                  <option <%= (form && form.bloodGroup) ? (form.bloodGroup == 'AB-') ? 'selected':'': ''; %> value="AB-">AB-</option>
                              </select>
                              <small class="errorTxt9"></small>
                              <small class="">
                                  <div id="locationError"
                                      style="font-size: .8rem; position: relative; color: #ff4081;">
                                  </div>
                              </small>
                          </div>
                      </div>
                      <div class="col s4">
                        <div class="input-field">
                            <label for="employeeId">Employee ID</label>
                            <input type="text" id="employeeId" name="employeeId" required
                                value="<%= (form && form.employeeId) ? form.employeeId : '' %>"
                                data-error=".errorTxt24" style="margin-top: 7px;" onkeyup="validateFields(event)">
                            <small class="errorTxt24"></small>
                        </div>
                    </div>
                    </div>
                      <div class="row">
                          <div class="input-field col m8 s8">
                                <label for="address">Address</label>
                                <input type="text" id="address" name="address" required
                                    value="<%= (form && form.address) ? form.address : '' %>"
                                    data-error=".errorTxt10">
                                <small class="errorTxt10"></small>
                        </div>
                        <div class="input-field col m s4">
                          <label for="address">Pincode</label>
                          <input type="text" id="pincode" name="pincode" required
                              value="<%= (form && form.pincode) ? form.pincode : '' %>"
                              data-error=".errorTxt11">
                          <small class="errorTxt11"></small>
                       </div>
                      </div>
                      <div class="row">
                        <h6 class="ml-1" style="color: #9e9e9e;font-size: 1rem;">Language</h6>
                          <% languages.forEach((language) => { %>
                          <div class="input-field col m2 s2">
                          <label style="margin-left: -12px;">
                                <input type="checkbox" <%= (form && form.language) ? (form.language.indexOf(language.name) !== -1)? 'checked':'' : '' %>  name="language[]" data-error="#errorTxt12"  value="<%=language.name%>"/>
                                <span><%-language.name%></span>
                          </label>
                          </div>
                          <% }); %>
                    </div>
                    <div id="errorTxt12" class="mt-3" style="font-size: .8rem;color: #ff4081;"></div>

                    <div class="row dynamicInput mt-3"></div>
                    <div class="row">
                      <div class="col s12 display-flex form-action">
                          <span class="btn blue darken-1 mr-2 ml-0 mt-3 btn"
                              id="addLanguage">
                              Other Language
                          </span>
                      </div>
                    </div>
                    <!-- </form> -->
                  </div>
                </div>
                <div class="row">
                  <div class="col s12 display-flex justify-content-end">
                      <!-- <button type="button" class="btn blue darken-1 mr-2 btn next basicNext">
                          Next
                      </button> -->
                      <span  class="btn blue darken-1 mr-2 btn next basicNext">
                          Next
                      </span>
                  </div>
                </div>
              </div>
            </div>

          </div>
    
          <div id="Roles" class="col s12">
            <div id="button-trigger" class="card card-default scrollspy" style="border-radius: 0px 0px 10px 10px;">
              <div class="card-content">
                <div class="row">
                  <div id="general">
                      <div class="row">
                          <div class="input-field col 12 s12"
                              style="text-transform: capitalize !important;">
                              <select class="error" id="roleId" name="roleId" required
                                  value="<%= (form && form.roleId) ? form.roleId : '' %>"
                                  data-error=".errorTxt14" onchange="handleSelectRole()">
                                  <option value="" disabled selected>Choose your option</option>
                                  <% roles.forEach((role) => { %>
                                  <option  <%= (form && form.roleId) ? (form.roleId == role.id) ? 'selected':'' : '' %>  label="<%= role.name %>" value="<%= role.id %>"><%= role.name.replace('_',' ').toLowerCase().split(' ').map((word)=> {return word[0].toUpperCase() + word.substr(1);}).join(" "); %></option>
                                  <% }); %>
                              </select>
                              <label>Role</label>
                              <small class="errorTxt14"></small>
                          </div>
                      </div>
           
                      <div class="row">
                        <div id="myChips" style="display: inline-block;margin-left: 10px;"></div>
                      </div>

                      <div class="row mt-2">
                        <div id="myReporting"></div>
                      </div>
                      <div class="row">
                        <h6 class="ml-1 mt-2" style="color: #9e9e9e;font-size: 1rem;">Operating Location</h6>
                        <% locations.forEach((location) => { %>
                          <div class="input-field col m2 s2">
                            <label style="margin-left: -12px;">
                              <input <%= (form && form.locationId) ? (form.locationId.indexOf(String(location.id)) !== -1)? 'checked':'' : '' %>  type="checkbox" name="locationId[]" data-error="#erroroPeratingLocation"  value="<%= location.id %>"/>
                              <span><%= location.name %></span>
                            </label>
                       </div>
                          <% }); %>    
                    </div>
                    <div id="erroroPeratingLocation" class="mt-3" style="font-size: .8rem;color: #ff4081;"></div>

                      <div class="row mt-2">
                        <div id="myStateCity"></div>
                      </div>
                  
                    <div class="row mt-2">
                      <div id="myPincode" style="margin-left: 10px;"></div>
                    </div>  

                      <script>
                          
                        function setChips(role) {

                              fetch(`${baseUrl}permissions/rolePermissions`, {
                                  method: 'POST',
                                  headers: {
                                      'Content-Type': 'application/json'
                                  },
                                  body: JSON.stringify({ role: role })
                              }).then(response => response.json()).then(data => {
                                  
                                console.log('data:', data);
                                let chipsHtml = '<label for="location">Permissions</label><br>';

                                data.data.forEach(parent => {
                                  if (parent.isCheck) { 
                                  chipsHtml += `<span class='chip customChip mt-1'><b>${parent.module.charAt(0).toUpperCase() + parent.module.slice(1)}:</b> `
                                  }
                                    parent.actions.forEach((action, id, array) => {
                                    if (action.isCheck && id != array.length - 1) { 
                                    chipsHtml += `${action.name.charAt(0).toUpperCase() + action.name.slice(1)}, `
                                    }
                                    else if (action.isCheck && id == array.length - 1) {
                                      chipsHtml += `${action.name.charAt(0).toUpperCase() + action.name.slice(1)}`
                                    } 
                                  })

                                  chipsHtml += `</span>`

                                });

                                document.getElementById('myChips').innerHTML = chipsHtml;

                              }).catch(error => {
                                  console.log('Error:', error);
                              }); 

                          }

                        function FindLevel(newRoleId) {

                          console.log('newRoleId :-', newRoleId);

                          const data = {
                          roleId : newRoleId
                          };

                          console.log('data :-', data);

                          fetch(`${baseUrl}user/findLevel`, {
                            method: 'POST',
                            headers: {
                              'Content-Type': 'application/json',
                            },
                            body: JSON.stringify(data),
                          })
                          .then(response => response.json())
                          .then(async data => {
                            console.log('Success:', data);
                           let option= await data.payload.reportingName.map(reportname => {
                            return `<option value='${reportname.id}'>${reportname.name}</option>`;
                          }).join('');
                       
                            let reportHtml =`<div class="input-field col 12 s12"
                            style="text-transform: capitalize !important;">
                            <select class="error" id="reportingTo" name="reportingTo" required
                                value="<%= (form && form.reportingTo) ? form.reportingTo : '' %>"
                                data-error=".errorTxt22">
                                <option value="" disabled selected>Choose your option</option>
                                ${option}
                            </select>
                            <label>Reporting To</label>
                            <small class="errorTxt22"></small>
                        </div>`;
                        document.getElementById('myReporting').innerHTML = reportHtml;
                        $('select').formSelect();
                          })
                          .catch((error) => {
                            console.error('Error:', error);
                          });

                          }

                        function FindStateCity(newRoleId,isStateSelect) {

                        console.log('newRoleId :-', newRoleId);

                        const data = {
                        isStateSelect : isStateSelect,
                        roleId:newRoleId
                        };

                        console.log('data :-', data);

                        fetch(`${baseUrl}user/findStateCity`, {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/json',
                          },
                          body: JSON.stringify(data),
                        })
                        .then(response => response.json())
                        .then(data => {
                        
                        console.log('Success:', data);
                          
                        let option = data.payload.StateLocation.map(stateLocation => {
                          return `<option value='${stateLocation.state}'>${stateLocation.state}</option>`;
                        }).join('');


                        let option2;
                        if(data.payload.isStateSelect==false){
                          option2= `<option value='' disabled>please select state</option>`;
                        }
                        else{
                          option2= data.payload.CityLocation.map(cityLocation => {
                          return `<option value='${cityLocation.city}'>${cityLocation.city}</option>`;
                          }).join('');
                        }
                          let reportHtml =`<div class="col s6" style="text-transform: capitalize !important;">
                        <label>State</label>
                        <select class="error" id="state" name="state" required
                            value="<%= (form && form.state) ? form.state : '' %>"
                            data-error=".errorTxt20" onchange="handleCity()">
                            <option value="" disabled selected>Choose your option</option>
                            ${option}
                        </select>
                        <small class="errorTxt20"></small>
                    </div>
                    <div class="col s6" style="text-transform: capitalize !important;">
                      <label>City</label>
                      <select class="error" id="city" name="city" required
                          value="<%= (form && form.city) ? form.city : '' %>"
                          data-error=".errorTxt21" onchange="handlePincode()">
                          <option value="" disabled selected>Choose your option</option>
                          ${option2}
                      </select>
                      <small class="errorTxt21"></small>
                  </div>`;
                        document.getElementById('myStateCity').innerHTML = reportHtml;
                        $('select').formSelect();
                        })

                        }

                        function FindCity(newStateName,isStateSelect) {

                        console.log('newStateName :-', newStateName);

                        const data = {
                        isStateSelect : isStateSelect,
                        stateName:newStateName
                        };

                        console.log('data :-', data);

                        fetch(`${baseUrl}user/findCity`, {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/json',
                          },
                          body: JSON.stringify(data),
                        })
                        .then(response => response.json())
                        .then(data => {
                          console.log('Success:', data);
                        let option= data.payload.City.map(city => {
                          return `<option value='${city.city}'>${city.city}</option>`;
                        }).join('');

                          let reportHtml =`<div class="col s6" style="text-transform: capitalize !important;">
                        <label>City</label>
                        <select class="error" id="city" name="city" required
                          value="<%= (form && form.city) ? form.city : '' %>"
                          data-error=".errorTxt21" onchange="handlePincode()">
                          <option value="" disabled selected>Choose your option</option>
                          ${option}
                        </select>
                        <small class="errorTxt21"></small>
                        </div>`;
                        document.getElementById('city').innerHTML = reportHtml;
                        $('select').formSelect();
                        })
                        .catch((error) => {
                          console.error('Error:', error);
                        });

                        }

                        function FindPincode(newCityName) {

                        console.log('newCityName :-', newCityName);

                        const data = {
                          cityName:newCityName
                        };

                        console.log('data :-', data);

                        fetch(`${baseUrl}user/findPincode`, {
                          method: 'POST',
                          headers: {
                            'Content-Type': 'application/json',
                          },
                          body: JSON.stringify(data),
                        })
                        .then(response => response.json())
                        .then(data => {
                          console.log('Success:', data);
                        

                         let option=data.payload.Pincode.map(pincode=>{
                           return `<label>
                           <input type="checkbox" name="pincodeId[]" value="${pincode.code}"/>
                          <span>${pincode.code}</span>
                        </label>`;
                         }).join('');

                          let reportHtml =`<h6 class="mt-3">Select Pincode</h6>
                          
                          ${option}
                         
                        `;
                        document.getElementById('myPincode').innerHTML = reportHtml;
                        $('select').formSelect();
                        })
                        .catch((error) => {
                          console.error('Error:', error);
                        });

                        }
                      
                     </script>
        
                    <!-- </form> -->
                  </div>
                </div>
                <div class="row">
                  <div class="col s12 display-flex justify-content-end">
                      <!-- <button type="button" class="btn blue darken-1 mr-2 btn next">
                          Next
                      </button> -->
                      <span  class="btn blue darken-1 mr-2 mt-3 btn next roleNextBtn">
                          Next
                      </span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <div id="Experience" class="col s12">
            <div id="button-trigger" class="card card-default scrollspy" style="border-radius: 0px 0px 10px 10px;">
              <div class="card-content">
                    <div class="row" style="display: flex;
                    align-items: center;">
                     <label for="experience" style="margin-left: 14px;">Experience</label>
                     <div class="col s1 m-0" style="margin-left: 70px !important;">
                        <div class="input-field">
                          <!-- <label for="experience">Experience in Months</label> -->
                          <input type="text" id="year" name="year" required
                              value="<%= (form && form.year) ? form.year : '' %>"
                              data-error=".errorTxt15">
                          <small class="errorTxt15"></small>
                        </div>
                      </div>
                      <div class="col s1 m-0" style='max-width: 50px'>
                        <span>year </span>
                      </div>
                      <div class="col s1 m-0">
                        <div class="input-field">
                          <!-- <label for="experience">Experience in Months</label> -->
                          <input type="text" id="month" name="month" max="12" required
                              value="<%= (form && form.month) ? form.month : '' %>"
                              data-error=".errorTxt16" >
                          <small class="errorTxt16"></small>
                        </div>
                    </div>
                    <div class="col s1 m-0">
                      <span>month </span>
                    </div>
                    </div>
                    <div class="row">
                      <div class="col s6" style="text-transform: capitalize !important;">
                        <label>Product Type</label>
                        <select class="error" id="productType" name="productType" required
                            value="<%= (form && form.productType) ? form.productType : '' %>"
                            data-error=".errorTxt17">
                            <option value="" disabled selected>Choose your option</option>
                            <% if(productTypes){ %> 
                            <% productTypes.forEach((productType) => { %>
                            <option <%= (form && form.productType) ? (form.productType == productType.name) ? 'selected':'': '' %> value="<%= productType.name %>"><%= productType.name %></option>
                            <% }); %>
                          <% } %>
                        </select>
                        <small class="errorTxt17" style="color: #ff4081;"></small>
                    </div>
                    <div class="col s6" style="text-transform: capitalize !important;">
                      <label>DPD</label>
                      <select class="error" id="dpd" name="dpd" required  value=""  data-error=".errorTxt18">
                          <option value="" disabled selected>Choose your option</option>
                          <% dpds.forEach((dpd) => { %>
                          <option <%= (form && form.dpd) ? (form.dpd == dpd.name) ? 'selected':'': '' %>  value="<%= dpd.name %>"><%= dpd.name %></option>
                          <% }); %>
                      </select>
                     
                      <small class="errorTxt18" style="color: #ff4081;"></small>
                      </div>
                    </div>
                    <div class="row ExperienceMain"></div>
                    <div class="row">
                      <div class="col s12 display-flex form-action">
                          <span class="btn blue darken-1"
                              id="addExperience" style="margin-top: 10px;">
                              Add More Experience
                          </span>
                      </div>
                    </div>

                    <div class="row">
                      <div class="col s12 display-flex justify-content-end form-action">
                          <!-- <button type="submit" class="btn blue darken-1 mr-2 btn"
                              id="addUser">
                              Save
                          </button> -->
                          <span  class="btn blue darken-1 mr-2 btn"
                              id="addUser">
                              Save
                          </span>
                      </div>
                    </div>
              </div>
            </div>

          </div>

        </div>
      </div>
    </div>
  </div>
</form>

</div>

<script>
  let isSelectFos=false;
  var today = new Date();
  var dd = today.getDate();
  var mm = today.getMonth() + 1; //January is 0!
  var yyyy = today.getFullYear();
  if (dd < 10) {
    dd = '0' + dd
  }
  if (mm < 10) {
    mm = '0' + mm
  }

  today = yyyy + '-' + mm + '-' + dd;
  document.getElementById("dob").setAttribute("max", today);

  const handleCity=()=>{
  isStateSelect=true;
  let state = document.getElementById("state");
  
  let newStateName=state.options[state.selectedIndex].value;
 
  FindCity(newStateName,isStateSelect);

 };

 const handlePincode=()=>{
  let city = document.getElementById("city");
 
  let newCityName=city.options[city.selectedIndex].value;
 
  FindPincode(newCityName);
 };


  const handleSelectRole = () => {

    let roleId = document.getElementById("roleId");
    let selectedLabel = roleId.options[roleId.selectedIndex].label;
    isStateSelect=false;
    let newRoleId=roleId.options[roleId.selectedIndex].value;
    
    FindLevel(newRoleId);

    setChips(selectedLabel);
   
    if(selectedLabel=='fos'){
      isSelectFos=true;
      FindStateCity(newRoleId,isStateSelect);
   
    }
    
    if (selectedLabel == "telecaller") {
      document.getElementById('for-telecaller').style.display = 'block';
      document.getElementById('for-fos').style.display = 'none';
    } else if (selectedLabel == "fos") {
      document.getElementById('for-fos').style.display = 'block';
      document.getElementById('for-telecaller').style.display = 'none';
    } else {
      document.getElementById('for-fos').style.display = 'none';
      document.getElementById('for-telecaller').style.display = 'none';
    }
  }

  const loadFile = function (event) {
    let reader = new FileReader();
    reader.onload = function () {
      let profileImg = document.getElementById('profileImg');
      profileImg.src = reader.result;
    };
    reader.readAsDataURL(event.target.files[0]);
  };

  const validateFields = async (e) => {
    return;
    const validRegex =
      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

    let data = {};

    if (e.target.name == 'email') {
      data.email = e.target.value
    }

    if (e.target.name == 'phone') {
      data.phone = e.target.value
    }

    if (e.target.name == 'employeeId') {
      data.employeeId = e.target.value
    }

    const response = await fetch(
      `${baseUrl}user/validateFields`, {
        method: 'POST',
        body: JSON.stringify(data),
        headers: {
          'Content-Type': 'application/json'
        }
      });
    const myJson = await response.json();
    console.log('JSON :-', myJson);

    if (e.target.name == 'email') {
      if (validRegex.test(e.target.value) == false) {
        document.getElementById('emailError').innerHTML = 'This email id invalid';
        document.getElementById("addUser").disabled = true;
      } else if (myJson.isExist) {
        console.log('isExits :- TRUE');
        document.getElementById('emailError').innerHTML = 'This email id already exists';
        document.getElementById("addUser").disabled = true;
      } else {
        console.log('isExits :- FALSE');
        document.getElementById('emailError').innerHTML = '';
        document.getElementById("addUser").disabled = false;
      }
    }

    if (e.target.name == 'phone') {
      if (myJson.isExist) {
        console.log('isExits :- TRUE');
        document.getElementById('phoneError').innerHTML = 'This phone number already exists';
        document.getElementById("addUser").disabled = true;
      } else {
        console.log('isExits :- FALSE');
        document.getElementById('phoneError').innerHTML = '';
        document.getElementById("addUser").disabled = false;
      }
    }

    if (e.target.name == 'employeeId') {
      if (myJson.isExist) {
        console.log('isExits :- TRUE');
        document.getElementById('employeeId').innerHTML = 'This employeeId already exists';
        document.getElementById("addUser").disabled = true;
      } else {
        console.log('isExits :- FALSE');
        document.getElementById('employeeIdError').innerHTML = '';
        document.getElementById("addUser").disabled = false;
      }
    }

  }

 $(document).ready(function () {
   var i=1;
   $('#addLanguage').click(function () {
     i++;
     $('.dynamicInput').append(`

                      <div class="input-field col m12 s12">
                              <label for="language">Specify Other Language</label>
                              <input type="text" id="language" name="language[]" required
                              data-error=".errorTxt12">
                              <small class="errorTxt12"></small>
                              <a href="#" class="remove_language">Remove</a>
                      </div>
     `);
     $('.dynamicInput').on("click",".remove_language", function(e){
        e.preventDefault(); 
        $(this).parent('div').remove(); i--;
    })
   });
 });

 $(document).ready(function () {
   var i=1;
   var ProductTypes=<%- JSON.stringify(productTypes) %>;
   var Dpds=<%- JSON.stringify(dpds) %>;
   $('#addExperience').click(function () {
     i++;
     var html='';
     var option='';
     var op2 = '';
     
     option=ProductTypes.map(productType => {
      return `<option value='${productType.name}'>${productType.name}</option>`;
    }).join('');
    
    op2= Dpds.map(dpds => {
         return `<option value='${dpds.name}'>${dpds.name}</option>`;
    }).join('');
    
     html = `<div class="Experience">
                      <div class="col s6" style="text-transform: capitalize !important;">
                        <label>Product Type</label>
                        <select class="error" id="productType" name="productType" required
                            value="<%= (form && form.productType) ? form.productType : '' %>"
                            data-error=".errorTxt18">
                            <option value="" disabled selected>Choose your option</option>
                            ${option}
                        </select>
                        <small class="errorTxt18"></small>
                    </div>
                    <div class="col s6" style="text-transform: capitalize !important;">
                      <label>DPD</label>
                      <select class="error" id="dpd" name="dpd" required
                          value="<%= (form && form.dpd) ? form.dpd : '' %>"
                          data-error=".errorTxt19">
                          <option value="" disabled selected>Choose your option</option>
                          ${op2}
                      </select>
                      <small class="errorTxt19"></small>
                  </div>
                        <a href="#" class="remove_experience ml-2">Remove</a>
              </div>
            `;
       
     $('.ExperienceMain').append(html);
     $('select').formSelect();
     $('.Experience').on("click",".remove_experience", function(e){
        e.preventDefault(); 
        $(this).parent('div').remove(); i--;
    });
   });
 });

  const toast = '<%- JSON.stringify(toast) %>';
  const error = <% if(error) { %>JSON.parse('<%- JSON.stringify(error) %>'); <% }else{ %> false <% } %>;
  const toastText = '<%- JSON.stringify(toastText) %>';
  const toastColor = '<%- JSON.stringify(toastColor) %>';
  const parseToast = JSON.parse(toast);
  const parseToastText = JSON.parse(toastText);
  const parseToastColor = JSON.parse(toastColor);
  
  $(document).ready(function () {

    if(error){
        error.forEach(element => {
          M.toast({html: element.msg});
        });
      }
    
    if (parseToast) {
      M.toast({
        html: parseToastText,
        classes: parseToastColor
      })
    }

    


    // before  next btn click validatation
    
    var formIsValid = {
        Roles:false,
        basic:false,
        experience:false
    }
    const roleField = ['roleId','reportingTo','locationId[]'];
    const basicFormField = ['firstName','dob','email','phone','emergencyPhone','lastName','location','bloodGroup','employeeId','address','pincode','language[]'];
    const expField = ['experience','YearsORMonths','productType','dpd'];

      function checkvalidation() {
        var basic = [];
        var role = [];
        var exp = [];

        roleField.forEach(element => {
          role.push($("[name='"+element+"']").valid());
          
        });

        basicFormField.forEach(element => {
          basic.push($("[name='"+element+"']").valid());
          
        });
        // expField.forEach(element => {
        //   exp.push($("[name='"+element+"']").valid());
          
        // });
        formIsValid.Roles = (role.includes(false)) ? false:formIsValid.Roles;
        formIsValid.basic = (basic.includes(false)) ? false:formIsValid.basic;
        formIsValid.experience = (exp.includes(false)) ? false:formIsValid.experience;
        console.table(formIsValid);
      }
      
      $(document).on('keydown,click,keypress','input', function () {
        checkvalidation();
      });

      $(document).on('change','select', function () {
        checkvalidation();
      });
     
    // $(document).on('click','#test3', function () {
    //     $('.basicNext').click();
    //     $('.roleNextBtn').click();
    // });

    $(document).on('click','.roleNextBtn', function () {
        if($(".validateAddUser").valid()){
          console.log('validate Roles');
          formIsValid.Roles = true;
          $('ul.tabs').tabs("select", "Basic");
        }else{
          formIsValid.Roles = false;
          console.log('Not valid');
          // $('ul.tabs').tabs("select", "Roles");
        }
    }); 

    $(document).on('click','.basicNext', function () {
        // checkvalidation();
        if($(".validateAddUser").valid()){
          console.log('validate basic');
          formIsValid.basic = true;
          console.log($(".validateAddUser").valid());
          $('ul.tabs').tabs("select", "Experience");
        }else{
          formIsValid.basic = false;
          console.log('Not valid');
          // $('ul.tabs').tabs("select", "Basic");
          console.log($(".validateAddUser").valid());
        }
    }); 


    $(document).on('click','#addUser', function () {
        if($(".validateAddUser").valid()){
          console.log('validate Exp ');
          console.log(formIsValid);
          formIsValid.experience = true;
          if(formIsValid.experience && formIsValid.Roles && formIsValid.basic){
            console.log(formIsValid);
            $('.validateAddUser').submit();
            $('#addUser').text('Loading.....');
            $('#addUser').attr('type','button');
            $(this).prop('disabled', true);
          }

          if(!formIsValid.basic){
            $('ul.tabs').tabs("select", "Basic");
            $(".validateAddUser").valid();
          }
          if(!formIsValid.Roles){
            $('ul.tabs').tabs("select", "Roles");
            $(".validateAddUser").valid();
          }

        }else{
          formIsValid.experience = false;
          console.log('Not valid');
          // $('ul.tabs').tabs("select", "Roles");
        }
    }); 



  });

</script>

<%- include('../../bottom.ejs') -%>